// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`HelloWorld 1`] = `
"import Web3 from 'web3';
const validators = require('enuma-solidity/validators');

const web3 = new Web3(\\"ws://localhost:7545\\");

export class HelloWorld {

  /**
   * @param {string} address
   */
  constructor(address){
    validators.true(arguments.length === 1);
    validators.address(address);

    this._contract = new web3.eth.Contract([{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"Hi\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"string\\"}],\\"payable\\":false,\\"stateMutability\\":\\"pure\\",\\"type\\":\\"function\\"}], address);
  }

  
  /**

* @return {string}*/
  Hi() {
    validators.true(arguments.length === 0);
    
    return this._contract.methods.Hi();
  }
  
}"
`;

exports[`StandardToken 1`] = `
"import Web3 from 'web3';
const validators = require('enuma-solidity/validators');

const web3 = new Web3(\\"ws://localhost:7545\\");

export class SafeMath {

  /**
   * @param {string} address
   */
  constructor(address){
    validators.true(arguments.length === 1);
    validators.address(address);

    this._contract = new web3.eth.Contract([], address);
  }

  
}
export class StandardToken {

  /**
   * @param {string} address
   */
  constructor(address){
    validators.true(arguments.length === 1);
    validators.address(address);

    this._contract = new web3.eth.Contract([{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"totalSupply\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"name\\":\\"_owner\\",\\"type\\":\\"address\\"}],\\"name\\":\\"balanceOf\\",\\"outputs\\":[{\\"name\\":\\"balance\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_to\\",\\"type\\":\\"address\\"},{\\"name\\":\\"_value\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"transfer\\",\\"outputs\\":[{\\"name\\":\\"success\\",\\"type\\":\\"bool\\"}],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"}], address);
  }

  
  /**

* @return {number}*/
  totalSupply() {
    validators.true(arguments.length === 0);
    
    return this._contract.methods.totalSupply();
  }
  

  /**
* @param {string} _owner
* @return {number}*/
  balanceOf(_owner) {
    validators.true(arguments.length === 1);
    validators.address(_owner, 'balanceOf: _owner must be address')
    return this._contract.methods.balanceOf(_owner);
  }
  

  /**
* @param {string} _to
* @param {number} _value
* @return {boolean}*/
  transfer(_to, _value) {
    validators.true(arguments.length === 2);
    validators.address(_to, 'transfer: _to must be address')
validators.uint256(_value, 'transfer: _value must be uint256')
    return this._contract.methods.transfer(_to, _value);
  }
  
}
export class Token {

  /**
   * @param {string} address
   */
  constructor(address){
    validators.true(arguments.length === 1);
    validators.address(address);

    this._contract = new web3.eth.Contract([{\\"constant\\":true,\\"inputs\\":[{\\"name\\":\\"_owner\\",\\"type\\":\\"address\\"}],\\"name\\":\\"balanceOf\\",\\"outputs\\":[{\\"name\\":\\"balance\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"}], address);
  }

  
  /**
* @param {string} _owner
* @return {number}*/
  balanceOf(_owner) {
    validators.true(arguments.length === 1);
    validators.address(_owner, 'balanceOf: _owner must be address')
    return this._contract.methods.balanceOf(_owner);
  }
  
}"
`;

exports[`Token 1`] = `
"import Web3 from 'web3';
const validators = require('enuma-solidity/validators');

const web3 = new Web3(\\"ws://localhost:7545\\");

export class SafeMath {

  /**
   * @param {string} address
   */
  constructor(address){
    validators.true(arguments.length === 1);
    validators.address(address);

    this._contract = new web3.eth.Contract([], address);
  }

  
}
export class Token {

  /**
   * @param {string} address
   */
  constructor(address){
    validators.true(arguments.length === 1);
    validators.address(address);

    this._contract = new web3.eth.Contract([{\\"constant\\":true,\\"inputs\\":[{\\"name\\":\\"_owner\\",\\"type\\":\\"address\\"}],\\"name\\":\\"balanceOf\\",\\"outputs\\":[{\\"name\\":\\"balance\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"}], address);
  }

  
  /**
* @param {string} _owner
* @return {number}*/
  balanceOf(_owner) {
    validators.true(arguments.length === 1);
    validators.address(_owner, 'balanceOf: _owner must be address')
    return this._contract.methods.balanceOf(_owner);
  }
  
}"
`;
